name: Compile Projects

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-cpp:
    name: Build C++ Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up C++ environment
        run: sudo apt-get install -y g++ cmake
      
      - name: Find and build C++ projects
        run: |
          # 프로젝트 구조 확인
          find . -name "CMakeLists.txt" -type f | while read -r cmake_file; do
            dir=$(dirname "$cmake_file")
            echo "Building C++ project in $dir"
            mkdir -p "$dir/build"
            cd "$dir/build"
            cmake ..
            cmake --build .
            cd -
          done
        continue-on-error: true

  build-csharp:
    name: Build C# Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      
      - name: Find and build C# projects
        run: |
          # .csproj 파일 찾아서 빌드
          find . -name "*.csproj" -type f | while read -r csproj_file; do
            dir=$(dirname "$csproj_file")
            echo "Building C# project: $csproj_file"
            dotnet restore "$csproj_file"
            dotnet build "$csproj_file" --configuration Release
          done
        continue-on-error: true

  build-kotlin:
    name: Build Kotlin Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Find and build Kotlin projects
        run: |
          # build.gradle 또는 build.gradle.kts 파일 찾기
          find . -name "build.gradle*" -type f | while read -r gradle_file; do
            dir=$(dirname "$gradle_file")
            echo "Building Kotlin project in $dir"
            if [ -f "$dir/gradlew" ]; then
              cd "$dir"
              chmod +x ./gradlew
              ./gradlew build
              cd -
            else
              cd "$dir"
              gradle build
              cd -
            fi
          done
        continue-on-error: true